[{"content":"模拟器下载 已过时： suyu github：https://github.com/suyu-emu/suyu\nsudachi github：https://github.com/sudachi-emu/sudachi\nRyujinx github：https://github.com/Ryujinx/Ryujinx(不含移动版)\nRyujinx系列：Ryujinx已停止开发\nsuyu系列：suyu、sudachi已经停止了，目前还有torzu存在\ntorzu 镜像：https://notabug.org/litucks/torzu 只是代码镜像可能会停用\ntorzu开发者不会提供编译好的二进制程序，而是需要自行编译，好在github上有人已编译的\n地址1：https://github.com/leonewton253/torzu\n地址2：https://github.com/ong19th/Torzu\n秘钥与固件 下载 Prodkeys官网：https://prodkeys.net/\nYuzu Emu：https://emuyuzu.com/yuzu-prod-keys/\n固件下载1：https://github.com/THZoria/NX_Firmware/releases/\n固件下载2：https://www.gamer520.com/61541.html\n固件安装：https://prodkeys.net/yuzu-firmware-v3/\n安装 修改yuzu文件夹路径： 启动yuzu-文件-打开yuzu文件夹(默认为C:\\Users{{用户名}}\\AppData\\Roaming\\yuzu)-将yuzu目录复制到yuzu.exe同级目录下并修改名称为user-关闭yuzu-删除\\AppData\\Roaming\\yuzu 文件夹。\n固件目录：固件解压后放在 nand\\system\\Contents\\registered\\ 目录下\n密钥目录：密钥prod.keys、title.keys放在keys目录下\n完成后验证： 工具-验证已安装内容的完整性。\n萝卜驱动 Mesa Turnip 驱动下载(安卓)\ngithub：https://github.com/K11MCH1/AdrenoToolsDrivers/releases\n依赖安装 windows：VC++\n运行游戏 游戏下载 gamer520：https://www.gamer520.com/\n补丁安装 补丁下载： https://github.com/yuzu-mirror/yuzu-mod-archive\nhttps://github.com/amakvana/SwitchEmuModDownloader\nhttps://github.com/StevensND/switch-port-mods\n模拟器设置 参考链接 yuzu模拟器安装使用教程(持续更新)：https://www.bilibili.com/read/cv15405863/\n如何编译torzu build-for-windows https://notabug.org/litucks/torzu/src/master/build-for-windows.md\n需要：\nVisual Studio Community 2022：https://visualstudio.microsoft.com/zh-hans/downloads/\nCMake：https://cmake.org/download/\nVulkan SDK：https://vulkan.lunarg.com/sdk/home#windows\nPython：https://www.python.org/downloads/windows/\nGit for Windows：https://gitforwindows.org/ When installing Git, include it in your system PATH by choosing the \u0026ldquo;Git from the command line and also from 3rd-party software\u0026rdquo; option. 安装Git for Windows时选 \u0026ldquo;Git from the command line and also from 3rd-party software\u0026rdquo;\n1 2 3 4 5 6 7 8 9 10 11 # from Notabug repo git clone --depth 1 https://notabug.org/litucks/torzu.git # git -c http.proxy=socks5h://127.0.0.1:9050 clone --depth 1 http://vub63vv26q6v27xzv2dtcd25xumubshogm67yrpaz2rculqxs7jlfqad.onion/torzu-emu/torzu.git cd torzu # 下载子模块，这一步也比较重要 git submodule update --init --recursive mkdir build cd build cmake .. -G \u0026#34;Visual Studio 17 2022\u0026#34; -A x64 -DYUZU_TESTS=OFF # 这一步经常会遇到错误，可以更换稍微旧点的cmake版本重试，部分包没下载好，请多次重试并有耐心。 cmake --build . --config Release 编译完成后可在build/bin/Release目录下找到\n1 2 3 cd bin cd Release mkdir user debian12+编译安卓apk 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # 源码 git clone --depth 1 --recursive https://notabug.org/litucks/torzu.git cd torzu git submodule update --init --recursive # 依赖 sudo apt-get update sudo apt-get install -y sdkmanager openjdk-17-jdk build-essential curl git pkg-config glslang-tools zip sudo sdkmanager \u0026#34;ndk;26.3.11579264\u0026#34; \u0026#34;platforms;android-34\u0026#34; \u0026#34;build-tools;34.0.0\u0026#34; \u0026#34;cmake;3.22.1\u0026#34; \u0026#34;platform-tools;34.0.5\u0026#34; sudo update-alternatives --config java # Select Java 17 here if possible # 构建 ./externals/vcpkg/bootstrap-vcpkg.sh -disableMetrics export ANDROID_HOME=/opt/android-sdk cd src/android ./gradlew assembleRelease APK 将位于src/android/app/build/outputs/apk/mainline/release/app-mainline-release.apk Mesa Turnip driver ：https://github.com/K11MCH1/AdrenoToolsDrivers/releases sudo sdkmanager 安装的工具或SDK可以在 /usr/lib/android-sdk (ubuntu)下找找看。 这里编译失败了。\n更新 2025年1月11日：\n","date":"2025-08-29T00:00:00Z","permalink":"https://chengcong1.github.io/p/switch/","title":"switch模拟器"},{"content":"vue3环境搭建 安装node.js 需要安装18.3或更高版本的 Node.js\nwindows安装：https://nodejs.cn/download\ndebian 安装：sudo apt install nodejs npm(仅尝试)\n检查安装：node -v\n创建一个 Vue 应用 vite + vue3 + typescript\n1 2 3 4 5 6 7 8 9 10 11 # npm 6.x npm create vite@latest my-vue-app --template vue # npm 7+, extra double-dash is needed: npm create vite@latest my-vue-app -- --template vue # yarn yarn create vite my-vue-app --template vue # pnpm pnpm create vite my-vue-app --template vue 运行：npm run dev\nvue3+golang部署样例 以 gin-vue-admin为例\n前后端分离 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 # 克隆项目 git clone https://github.com/flipped-aurora/gin-vue-admin.git # server项目: ## 进入server文件夹 cd server ## 使用 go mod 并安装go依赖包 go generate ## 运行 go run . # web项目: ## 进入web文件夹 cd web ## 安装依赖 npm install ## 启动web项目 npm run serve 非nginx部署代理(gin) 在gin-vue-admin\\server\\initialize\\router.go文件中按照文件中的注释配置。\n1 2 3 4 5 6 7 // 如果想要不使用nginx代理前端网页，可以修改 web/.env.production 下的 // VUE_APP_BASE_API = / // VUE_APP_BASE_PATH = http://localhost // 然后执行打包命令 npm run build。再打开下面3行注释，将编译好的dist目录下的文件复制到server目录下 // Router.StaticFile(\u0026#34;/favicon.ico\u0026#34;, \u0026#34;./dist/favicon.ico\u0026#34;) // Router.Static(\u0026#34;/assets\u0026#34;, \u0026#34;./dist/assets\u0026#34;) // dist里面的静态资源 // Router.StaticFile(\u0026#34;/\u0026#34;, \u0026#34;./dist/index.html\u0026#34;) // 前端网页入口页面 如果运行后static找不到文件，则：\n1 2 3 4 5 6 7 8 9 10 11 # 注释 // Router.StaticFile(\u0026#34;/\u0026#34;, \u0026#34;./dist/index.html\u0026#34;) // 前端网页入口页面 # 添加 Router.NoRoute(func(c *gin.Context) { data, err := os.ReadFile(\u0026#34;./dist/index.html\u0026#34;) if err != nil { c.AbortWithError(http.StatusInternalServerError, err) return } c.Data(http.StatusOK, \u0026#34;text/html; charset=utf-8\u0026#34;, data) }) 使用embed嵌入资源文件 gin+vue 请访问：go embed 实现gin + vue静态资源嵌入\n如果将dist目录放到public目录下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 # server/public.go package public import ( \u0026#34;embed\u0026#34; ) //go:embed dist var StaticFile embed.FS # server\\initialize\\router.go // Router.StaticFile(\u0026#34;/favicon.ico\u0026#34;, \u0026#34;./dist/favicon.ico\u0026#34;) // Router.Static(\u0026#34;/assets\u0026#34;, \u0026#34;./dist/assets\u0026#34;) // dist里面的静态资源 // Router.StaticFile(\u0026#34;/\u0026#34;, \u0026#34;./dist/index.html\u0026#34;) // 前端网页入口页面 Router.Use(Serve(\u0026#34;/\u0026#34;, EmbedFolder(public.StaticFile, \u0026#34;dist\u0026#34;))) Router.NoRoute(func(c *gin.Context) { data, err := public.StaticFile.ReadFile(\u0026#34;dist/index.html\u0026#34;) if err != nil { c.AbortWithError(http.StatusInternalServerError, err) return } c.Data(http.StatusOK, \u0026#34;text/html; charset=utf-8\u0026#34;, data) }) # 其他未修改直接复制博客内函数即可 const INDEX = \u0026#34;index.html\u0026#34; type ServeFileSystem interface { http.FileSystem Exists(prefix string, path string) bool } type localFileSystem struct { http.FileSystem root string indexes bool } func LocalFile(root string, indexes bool) *localFileSystem { return \u0026amp;localFileSystem{ FileSystem: gin.Dir(root, indexes), root: root, indexes: indexes, } } func (l *localFileSystem) Exists(prefix string, filepath string) bool { if p := strings.TrimPrefix(filepath, prefix); len(p) \u0026lt; len(filepath) { name := path.Join(l.root, p) stats, err := os.Stat(name) if err != nil { return false } if stats.IsDir() { if !l.indexes { index := path.Join(name, INDEX) _, err := os.Stat(index) if err != nil { return false } } } return true } return false } func ServeRoot(urlPrefix, root string) gin.HandlerFunc { return Serve(urlPrefix, LocalFile(root, false)) } // Static returns a middleware handler that serves static files in the given directory. func Serve(urlPrefix string, fs ServeFileSystem) gin.HandlerFunc { fileserver := http.FileServer(fs) if urlPrefix != \u0026#34;\u0026#34; { fileserver = http.StripPrefix(urlPrefix, fileserver) } return func(c *gin.Context) { if fs.Exists(urlPrefix, c.Request.URL.Path) { fileserver.ServeHTTP(c.Writer, c.Request) c.Abort() } } } type embedFileSystem struct { http.FileSystem } func (e embedFileSystem) Exists(prefix string, path string) bool { _, err := e.Open(path) if err != nil { return false } return true } func EmbedFolder(fsEmbed embed.FS, targetPath string) ServeFileSystem { fsys, err := fs.Sub(fsEmbed, targetPath) if err != nil { panic(err) } return embedFileSystem{ FileSystem: http.FS(fsys), } } 相关链接： Gin + embed+vue3打包项目：https://milu.ink/382.html\n推荐Github上15个学习Vue3开源项目：https://juejin.cn/post/7198412948494139448\n组件库： ArcoDesign：字节跳动团队开源的企业级产品设计系统，包含一套Vue3/React UI 组件库\nvue + go的相关项目： gin-vue-admin：Gin + Vue github：https://github.com/flipped-aurora/gin-vue-admin demo：https://demo.gin-vue-admin.com/#/layout/dashboard\nGoFlyAdmin：Gin + Vue + ArcoDesign gitee：https://gitee.com/huang_li_shi_admin/GoFlyAdmin github：https://github.com/huanglishi/GoFlyAdmin demo开源版：https://sg.goflys.cn/webadmin\nweave： Github：https://github.com/qingwave/weave demo：https://qingwave.github.io/weave/index\ngo-admin-team/go-admin： Github：https://github.com/go-admin-team/go-admin\nvue-vben-admin： Github：https://github.com/vbenjs/vue-vben-admin demo：https://www.vben.pro/\nblockcheDev/blog-web：博客项目 github：https://github.com/blockcheDev/blog-web 地址：https://www.hitori.cn\n","date":"2025-06-25T00:00:00Z","permalink":"https://chengcong1.github.io/p/vue3_build/","title":"vue3环境搭建与部署"},{"content":"介绍 VS Code是一款开源的代码编辑器，基于Electron 框架构建，支持Windows、MacOS和Linux。 VS Code 开源地址：https://github.com/microsoft/vscode\n安装 VS Code下载地址：https://code.visualstudio.com/download\n插件 插件下载地址：https://marketplace.visualstudio.com/\n常用插件 Chinese (Simplified) (简体中文)：适用于 VS Code 的中文（简体）语言包 Error Lens：将错误信息显示在代码行后面 Even Better TOML：TOML 配置文件语法高亮 远程开发 Remote - SSH 依赖：Remote - SSH: Editing Configuration Files、Remote Explorer golang环境 Go：golang.go vue3环境 代码补全 Lingma - Alibaba Cloud AI Coding Assistant：阿里云提供的智能编码辅助工具，提供 代码智能生成、智能问答、多文件修改、编程智能体 等能力 GitHub Copilot：微软提供 Comate BaiduComate：文心快码，百度提供 AI写代码 Cline：AI助手 Cline-Chinese：Cline中文汉化版 CodeBuddy：腾讯云自研的一款开发编程提效辅助工具 配置 禁用更新 禁用扩展更新： 设置\u0026ndash;用户\u0026ndash;功能\u0026ndash;扩展\u0026ndash;Auto Check Updates(适用于所有配置文件)\u0026ndash;取消勾选 设置\u0026ndash;用户\u0026ndash;功能\u0026ndash;扩展\u0026ndash;Auto Update(适用于所有配置文件)\u0026ndash;取消勾选\n禁用VS Code更新： 设置\u0026ndash;用户\u0026ndash;应用程序\u0026ndash;启用在windows上后台下载和安装新的VS Code版本\u0026ndash;取消勾选\n基于VS Code的其他编辑器 Lingma IDE Lingma IDE 是基于 VS Code 开源版本构建的智能代码编辑器，全面集成智能编码助手的能力，开箱即用更简单，无需安装插件即可享受高效、智能的编程体验。 下载地址：https://lingma.aliyun.com/download 目前登陆后免费使用\nVSCodium VSCodium 是微软流行的 Visual Studio Code 编辑器的一个分支。它与 VS Code 完全相同，唯一不同的是，VSCodium 不跟踪你的使用数据。 VSCodium不能使用微软的Remote - SSH插件\nCursor Cursor是一款AI 代码编辑器。 试用过后收费\nComate 百度IDE\n","date":"2025-06-16T00:00:00Z","permalink":"https://chengcong1.github.io/p/use_vscode/","title":"VS Code上手体验"},{"content":"","date":"2025-06-16T00:00:00Z","permalink":"https://chengcong1.github.io/p/win11_install/","title":"win11系统安装"},{"content":"安装hugo 官方文档：https://hugo.opendocs.io/getting-started\n二进制安装：https://github.com/gohugoio/hugo/releases 下载完成后解压hugo.exe并添加到环境变量中\n其他安装方式：\n1 2 3 # go install (1.23.0 or later) 安装 set CGO_ENABLED=1 go install -tags extended github.com/gohugoio/hugo@latest 查看安装情况：\n1 2 # hugo version hugo v0.147.7-189453612e4bedc4f27495a7b1145321c8d89807+extended windows/amd64 BuildDate=2025-05-31T12:41:12Z VendorInfo=gohugoio 快速开始 hugo官方文档：https://hugo.opendocs.io/getting-started/quick-start/\n1 2 3 4 5 6 hugo new site MyBlog cd MyBlog git init git submodule add https://github.com/CaiJimmy/hugo-theme-stack/ themes/hugo-theme-stack echo \u0026#34;theme = \u0026#39;hugo-theme-stack\u0026#39;\u0026#34; \u0026gt;\u0026gt; hugo.toml hugo server 本地访问：http://localhost:1313\n配置stack主题 主题：https://themes.gohugo.io/themes/hugo-theme-stack/ demo：https://demo.stack.jimmycai.com/ Docs：https://stack.jimmycai.com/guide/getting-started https://stack-docs.netlify.app/zh/getting-started github：https://github.com/CaiJimmy/hugo-theme-stack\n复制模板配置文件：MyBlog\\themes\\hugo-theme-stack\\exampleSite\\hugo.yaml 到 MyBlog\\hugo.yaml 复制模板内容文件夹： MyBlog\\themes\\hugo-theme-stack\\exampleSite\\content 到 MyBlog\\content 复制文件夹 MyBlog\\themes\\hugo-theme-stack\\archetypes 到 MyBlog\\archetypes 复制文件MyBlog\\themes\\hugo-theme-stack\\.gitignore 到 MyBlog\\.gitignore 排除不必要的文件上传(hugo server会自动生成) 运行时有如下报错(原因可能为国内网络问题，删除部分内容重新执行hugo server)：\n1 2 3 4 5 6 7 8 WARN The \u0026#34;twitter\u0026#34;, \u0026#34;tweet\u0026#34;, and \u0026#34;twitter_simple\u0026#34; shortcodes were deprecated in v0.142.0 and will be removed in a future release. Please use the \u0026#34;x\u0026#34; shortcode instead. ERROR template: _shortcodes/twitter_simple.html:17:25: executing \u0026#34;render-simple-tweet\u0026#34; at \u0026lt;resources.GetRemote\u0026gt;: error calling GetRemote: Get \u0026#34;https://publish.twitter.com/oembed?dnt=false\u0026amp;omit_script=true\u0026amp;url=https%3A%2F%2Ftwitter.com%2FDesignReviewed%2Fstatus%2F1085870671291310081\u0026#34;: dial tcp 69.171.247.71:443: connectex: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond. ERROR template: _shortcodes/vimeo_simple.html:26:25: executing \u0026#34;render-vimeo\u0026#34; at \u0026lt;resources.GetRemote\u0026gt;: error calling GetRemote: Get \u0026#34;https://vimeo.com/api/oembed.json?dnt=0\u0026amp;url=https%3A%2F%2Fvimeo.com%2F48912912\u0026#34;: dial tcp 31.13.94.37:443: connectex: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond. WARN The \u0026#34;gist\u0026#34; shortcode was deprecated in v0.143.0 and will be removed in a future release. See https://gohugo.io/shortcodes/gist for instructions to create a replacement. WARN Search page not found. Create a page with layout: search. WARN Archives page not found. Create a page with layout: archives. Built in 43729 ms Error: error building site: logged 2 error(s) 删除 MyBlog\\content\\post\\rich-content\\index.md中的几个短代码\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 ## Twitter Simple Shortcode {{ \u0026lt; twitter_simple user=\u0026#34;DesignReviewed\u0026#34; id=\u0026#34;1085870671291310081\u0026#34; \u0026gt; }} \u0026lt;br\u0026gt; ...... ## Vimeo Simple Shortcode {{ \u0026lt; vimeo_simple 48912912 \u0026gt; }} ...... ## Gist Shortcode {{ \u0026lt; gist spf13 7896402 \u0026gt; }} 修改MyBlog\\hugo.yaml\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 title: 魔力の博客 DefaultContentLanguage: zh-cn languages: zh-cn: languageName: 中文 title: 魔力の博客 weight: 2 params: sidebar: subtitle: 斯人若彩虹，遇上方知有。 ...... params: ...... sidebar: emoji: 🍥 subtitle: 斯人若彩虹，遇上方知有。 avatar: enabled: true local: true src: avatar.png # 这个是头像的地址 # 设置自定义的icon(侧边栏GitHub与Twitter的小图标) - identifier: mail name: mail url: \u0026#34;mailto:2621609520@qq.com\u0026#34; params: icon: mail # SVG 图标：主题自带的 SVG 图标来自 Tabler Icons（https://tablericons.com/） docs：https://stack-docs.netlify.app/zh/configuration/custom-menu 放在：assets/icons目录下 # paginate: 10 # 分页，10篇文章一页，旧的hugo版本使用此字段 pagination: pagerSize: 10 # 新版本hugo使用此字段 创建png格式的个人头像avatar.png复制到MyBlog\\assets目录下\n到此配置基本完成，可以根据自己的需要进行调整，比如删除样例中的文档\n使用GitHub Actions自动部署 创建仓库并提交内容 1 2 3 4 5 git add README.md git commit -m \u0026#34;first commit\u0026#34; git branch -M main git remote add origin https://github.com/chengcong1/chengcong1.github.io.git git push -u origin main 设置GitHub Pages 点击github仓库About右侧设置：勾选 Use your GitHub Pages website\n创建GitHub Token 在此页面 https://github.com/settings/tokens 创建Token，点击Generate new token (classic) 设置名称Note、设置有效期Expiration、设置权限:勾选repo、点击Generate token(只显示一次，需记录清楚)\n设置Token 在仓库界面点击Setting\u0026ndash;\u0026gt;Secrets and variables\u0026ndash;\u0026gt;New repository secrets\u0026ndash;\u0026gt;Name: ACCESS_TOKEN Value: 上一步生成的Token\n创建workflows 在本地创建.github/workflows/deploy.yaml 内容参考：github 提交完成后自动生成public目录提交到gh-pages分支\n设置GitHub Pages分支 点击仓库Settings\u0026ndash;\u0026gt;Pages\u0026ndash;\u0026gt;Branch\u0026ndash;\u0026gt;gh-pages\u0026ndash;\u0026gt;Save\n查看静态网站 等待片刻查看是否成功：https://chengcong1.github.io/\n其他部署方式 以上是在GitHub Actions中使用同一个仓库不同的分支实现的，也可以不同的仓库创建，或者一个私有仓库一个公开仓库。 其他非GitHub Actions部署方式：https://gohugo.io/host-and-deploy/\n编写markdown文档 了解基本使用知识 slug: 是网页链接，是唯一的标识符，生成文章的访问地址比如：slug:test-chinese 时文章地址为：http://localhost:1313/p/test-chinese/ 当 slug:\u0026quot;\u0026quot; 时，使用文件名作为路径\ndraft: true 表示草稿默认为false hugo server --buildDrafts 可查看草稿内容\ncategories: 表示分类\ntags: 表示标签\n多语言：页面新建index.md 默认是中文则是中文，英文则英文，另新建index.zh-cn.md或index.en.md 则表示中文或英文，同时存在index.zh-cn.md或index.en.md多个语言时，文章会显示翻译到另一个语言。\n文件名：不是必须index.md 或者 index.en.md，hugo+stack搭建个人博客.md 以及 hugo+stack搭建个人博客.en.md也可以\n目录：stack 一级标题不显示，从二级标题开始生成目录？。\n文章间跳转 Hugo中如何在markdown中增加文章的内链：https://macgeeker.com/hugo/hugo-rel/\n自定义的shortcode：\n1 2 3 4 # 在layouts/shortcodes目录里新建一个文件 xrelref.html {{ with .Site.GetPage (.Get 0) }}\u0026lt;a class=\u0026#34;link\u0026#34; href=\u0026#34;{{ .RelPermalink }}\u0026#34; title=\u0026#34;{{ .Title }}\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;{{ .Title }}\u0026lt;/a\u0026gt;{{ end }} # 在markdown中引用，注意\u0026#34;{{\u0026#34;与\u0026#34;\u0026lt;\u0026#34;之间使用时没有空格 {{ \u0026lt; xrelref \u0026#34;01-append-icon.md\u0026#34; \u0026gt; }} 以下方式本地能运行，但是github action发生错误。\n1 2 3 [Chinese Test] ({{ \u0026lt; ref \u0026#34;\\post\\temp\\chinese-test\\ChineseTest.md\u0026#34; \u0026gt;}}) \u0026lt;a class=\u0026#34;link\u0026#34; target=\u0026#34;_blank\u0026#34; href={{ \u0026lt; ref \u0026#34;\\post\\temp\\chinese-test\\ChineseTest.md\u0026#34; \u0026gt;}} \u0026gt;ChineseTest\u0026lt;/a\u0026gt; 最后选择以下方式：\n1 2 3 4 5 6 # marrkdown语法，但是需要手动写url，url要写对 [Chinese Test1](/p/test-chinese/#引用) # html语法，增加了target=\u0026#34;_blank\u0026#34;可以跳转到新的页面 \u0026lt;a class=\u0026#34;link\u0026#34; target=\u0026#34;_blank\u0026#34; href=\u0026#34;/p/test-chinese/#引用\u0026#34;\u0026gt;ChineseTest\u0026lt;/a\u0026gt; # md文件名需写正确，不然没有输出，也不能跳转到文章的指定标题 {{ \u0026lt; xrelref \u0026#34;ChineseTest.md\u0026#34; \u0026gt;}} 跳转测试： Chinese Test\n其他警告或错误 page not found 1 2 WARN Search page not found. Create a page with layout: search. WARN Archives page not found. Create a page with layout: archives. 创建多语言的Search与Archives 创建 MyBlog\\content\\page\\Search下的index.en.md 创建 MyBlog\\content\\page\\Archives下的index.en.md\nGitHub Actions运行错误 Error: Action failed with \u0026ldquo;The process \u0026lsquo;/usr/bin/git\u0026rsquo; failed with exit code 128\u0026rdquo; 没有权限，需要设置有权限的TOKEN\nError: You have to provide a GITHUB_TOKEN or GH_PAT 需要一个TOKEN\n参考文档 写的可能不是很清晰，请参考如下文章。\nGitHub Action: The process ‘/usr/bin/git‘ failed with exit code 128 解决方案：https://blog.csdn.net/nxg0916/article/details/129063959\n【教程】Hugo+Github博客部署：https://sazerac-kk.github.io/p/%E6%95%99%E7%A8%8Bhugo-github%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2\nHugo GitHub Actio：https://github.com/marketplace/actions/hugo-github-action\n建站技术 | 使用 Hugo+Stack 简单搭建一个博客：https://blog.reincarnatey.net/2023/build-hugo-blog-with-stack-mod\n使用hugo stack主题快速搭建博客：https://www.liuhouliang.com/post/hugo_theme\n建站指南-Stack主题：https://site.zhelper.net/Hugo/hugo-stack\n用 Hugo 重新搭建博客：https://zhajiman.github.io/post/rebuild_blog/\n","date":"2025-06-08T00:00:00Z","permalink":"https://chengcong1.github.io/p/hugo_stack/","title":"hugo+stack搭建个人博客"},{"content":"正文测试 而这些并不是完全重要，更加重要的问题是， 带着这些问题，我们来审视一下学生会退会。 既然如何， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 我们不得不面对一个非常尴尬的事实，那就是， 可是，即使是这样，学生会退会的出现仍然代表了一定的意义。 学生会退会，发生了会如何，不发生又会如何。 经过上述讨论， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 学生会退会，到底应该如何实现。 这样看来， 在这种困难的抉择下，本人思来想去，寝食难安。 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 就我个人来说，学生会退会对我的意义，不能不说非常重大。 莎士比亚曾经提到过，人的一生是短的，但如果卑劣地过这一生，就太长了。这似乎解答了我的疑惑。 莫扎特说过一句富有哲理的话，谁和我一样用功，谁就会和我一样成功。这启发了我， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 学生会退会，到底应该如何实现。 一般来说， 从这个角度来看， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 在这种困难的抉择下，本人思来想去，寝食难安。 了解清楚学生会退会到底是一种怎么样的存在，是解决一切问题的关键。 一般来说， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 问题的关键究竟为何？ 而这些并不是完全重要，更加重要的问题是。\n奥斯特洛夫斯基曾经说过，共同的事业，共同的斗争，可以使人们产生忍受一切的力量。　带着这句话，我们还要更加慎重的审视这个问题： 一般来讲，我们都必须务必慎重的考虑考虑。 既然如此， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 带着这些问题，我们来审视一下学生会退会。 我认为， 我认为， 在这种困难的抉择下，本人思来想去，寝食难安。 问题的关键究竟为何？ 每个人都不得不面对这些问题。 在面对这种问题时， 要想清楚，学生会退会，到底是一种怎么样的存在。 我认为， 既然如此， 每个人都不得不面对这些问题。 在面对这种问题时， 那么， 我认为， 学生会退会因何而发生。\n引用 思念是最暖的忧伤像一双翅膀\n让我停不了飞不远在过往游荡\n不告而别的你 就算为了我着想\n这么沉痛的呵护 我怎么能翱翔\n最暖的憂傷 - 田馥甄\n图片 1 2 3 ![Photo by Florian Klauer on Unsplash](florian-klauer-nptLmg6jqDo-unsplash.jpg) ![Photo by Luca Bravo on Unsplash](luca-bravo-alS7ewQ41M8-unsplash.jpg) ![Photo by Helena Hertz on Unsplash](helena-hertz-wWZzXlDpMog-unsplash.jpg) ![Photo by Hudai Gayiran on Unsplash](hudai-gayiran-3Od_VKcDEAA-unsplash.jpg) 相册语法来自 Typlog\n","date":"2020-09-09T00:00:00Z","permalink":"https://chengcong1.github.io/p/test-chinese/","title":"Chinese Test"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Diff code block 1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL + ALT + Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nHyperlinked image The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2019-03-11T00:00:00Z","permalink":"https://chengcong1.github.io/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"Hugo ships with several Built-in Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\nYouTube Privacy Enhanced Shortcode bilibilibi Shortcode Gitlab Snippets Shortcode Quote Shortcode Stack adds a quote shortcode. For example:\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― A famous person, The book they wrote Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― Anonymous book Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― Some book Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― Somebody","date":"2019-03-10T00:00:00Z","permalink":"https://chengcong1.github.io/p/rich-content/","title":"Rich Content"},{"content":"Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\nExierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\nComas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et Vagus elidunt The Van de Graaf Canon\nMane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","date":"2019-03-09T00:00:00Z","permalink":"https://chengcong1.github.io/p/placeholder-text/","title":"Placeholder Text"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\nCreate a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so: 1 2 3 {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }} To enable KaTeX globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTeX on a per page basis include the parameter math: true in content files Note: Use the online reference of Supported TeX Functions\nExamples Inline math: $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$\nBlock math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$","date":"2019-03-08T00:00:00Z","permalink":"https://chengcong1.github.io/p/math-typesetting/","title":"Math Typesetting"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 :see_no_evil: 🙉 :hear_no_evil: 🙊 :speak_no_evil:\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1 2 3 .emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; } ","date":"2019-03-05T00:00:00Z","permalink":"https://chengcong1.github.io/p/emoji-support/","title":"Emoji Support"}]